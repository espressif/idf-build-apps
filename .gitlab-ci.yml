default:
  image: $CI_DOCKER_REGISTRY/esp-idf-pre-commit:1
  tags: [build]

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
cache:
  paths:
    - .cache/pip

pre-commit:
  stage: .pre
  script:
    - pip install pre-commit
    - pre-commit run -a

.build-hello-world:
  stage: build
  needs: []  # run immediately
  before_script:
    - git clone -b ${IDF_RELEASE_BRANCH} --depth 1 --recursive ${IDF_URL_PATH}
    - cd esp-idf
    - export IDF_PATH=$(pwd)
  artifacts:
    paths:
      - esp-idf/examples/get-started/hello_world/build
    expire_in: 4 days
    when: on_failure

build-hello-world-4.1-4.3:
  extends: .build-hello-world
  image: $CI_DOCKER_REGISTRY/esp32-ci-env:latest
  parallel:
    matrix:
      - IDF_RELEASE_BRANCH: [release/v4.1, release/v4.2, release/v4.3]
  script:
    - . /opt/pyenv/activate
    - pyenv global 3.4.8
    - python tools/idf_tools.py --non-interactive install ${SETUP_TOOLS_LIST:-}
    - eval "$(tools/idf_tools.py --non-interactive export)"
    - pip install ${CI_PROJECT_DIR}
    - python -m idf_build_apps build -vv
      -p examples/get-started/hello_world
      -t esp32
      --size-file size_info.json
      --ignore-warning-str "Python 3 versions older than 3.6 are not supported"

build-hello-world-4.4:
  extends: .build-hello-world
  image: $CI_DOCKER_REGISTRY/esp-env:v4.4-1
  parallel:
    matrix:
      - IDF_RELEASE_BRANCH: [ release/v4.4 ]
  script:
    - . /opt/pyenv/activate
    - pyenv global 3.7.10
    - python tools/idf_tools.py --non-interactive install ${SETUP_TOOLS_LIST:-}
    - eval "$(tools/idf_tools.py --non-interactive export)"
    - pip install ${CI_PROJECT_DIR}
    # fix "The following Python requirements are not satisfied:" issue
    - pip install "jinja2<3.1"
    - pip install "itsdangerous<2.1"
    - pip install "bitstring>=3.1.6,<4"
    - python -m idf_build_apps build -vv
      -p examples/get-started/hello_world
      -t esp32
      --size-file size_info.json

build-hello-world-5.0-or-later:
  extends: .build-hello-world
  image: ${IMAGE}
  parallel:
    matrix:
      - IMAGE: $CI_DOCKER_REGISTRY/esp-env-v5.0:4
        IDF_RELEASE_BRANCH: release/v5.0
      - IMAGE: $CI_DOCKER_REGISTRY/esp-env-v5.1:1
        IDF_RELEASE_BRANCH: master
  artifacts:
    paths:
      - esp-idf/examples/get-started/hello_world/build
      - report.xml
    expire_in: 4 days
    when: on_failure
  script:
    - bash install.sh
    - . export.sh
    - pip install ${CI_PROJECT_DIR}
    - python -m idf_build_apps build -vv
      -p examples/get-started/hello_world
      -t esp32
      --size-file size_info.json
    # also run unit-test
    - cd $CI_PROJECT_DIR
    - pip install pytest
    - pytest --junit-xml report.xml

build-python-package:
  stage: deploy
  except:
    refs:
      - tags
  script:
    - pip install flit
    - flit build

publish-gitlab:
  stage: deploy
  variables:
    FLIT_USERNAME: gitlab-ci-token
    FLIT_PASSWORD: ${CI_JOB_TOKEN}
    FLIT_INDEX_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
  only:
    refs:
      - tags
  script:
    - pip install flit
    - flit publish --setup-py

publish-pypi:
  stage: deploy
  variables:
    FLIT_USERNAME: __token__
    FLIT_PASSWORD: ${PYPI_TOKEN}
  only:
    refs:
      - tags
  script:
    - pip install flit
    - flit publish --setup-py
