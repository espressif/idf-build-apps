name: Test Build IDF Apps

on:
  pull_request:
    paths:
      - 'idf_build_apps/**'
  push:
    branches:
      - main

env:
  IDF_PATH: /opt/esp/idf

defaults:
  run:
    shell: bash

jobs:
  build-python-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.7'
      - run: |
          pip install -U pip
          pip install flit
          flit build
      - name: Upload built python packages
        uses: actions/upload-artifact@v3
        with:
          name: wheel
          path: dist/idf_build_apps-*.whl

  build-apps-on-idf-env:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build-python-packages
    strategy:
      matrix:
        idf-branch: [ release-v5.0, release-v5.1 ]
    runs-on: ubuntu-latest
    container:
      image: espressif/idf:${{ matrix.idf-branch }}
    steps:
      - name: Download wheel
        uses: actions/download-artifact@v3
        with:
          name: wheel
      - name: Build the Apps
        run: |
          bash $IDF_PATH/install.sh
          . $IDF_PATH/export.sh
          pip install idf_build_apps-*.whl
          python -m idf_build_apps build -vv -t esp32 \
            -p $IDF_PATH/examples/get-started/hello_world \
            --size-file size_info.json

  build-apps-on-idf-master:
    runs-on: ubuntu-latest
    container:
      image: espressif/idf:latest
    env:
      FLIT_ROOT_INSTALL: 1
    steps:
      - uses: actions/checkout@v4
      - name: Build the Apps
        run: |
          bash $IDF_PATH/install.sh
          . $IDF_PATH/export.sh
          pip install flit
          flit install -s
          python -m idf_build_apps build -vv -t esp32 \
            -p $IDF_PATH/examples/get-started/hello_world \
            --size-file size_info.json
          pytest --cov idf_build_apps --cov-report term-missing --junit-xml report.xml

  build-apps-on-idf-8266:
    runs-on: ubuntu-latest
    container:
      image: python:3
    env:
      TOOLCHAIN_DIR: ${HOME}/.espressif/tools
      FLIT_ROOT_INSTALL: 1
    strategy:
      matrix:
        branch:
          - v3.4
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          apt update \
          && apt install -y --no-install-recommends \
              gcc \
              git \
              wget \
              make \
              libncurses-dev \
              flex \
              bison \
              gperf
      - name: Checkout the SDK
        run: |
          git clone --recursive --shallow-submodules \
            --branch ${{ matrix.branch }} \
            https://github.com/espressif/ESP8266_RTOS_SDK \
            $IDF_PATH
      - name: Install toolchain
        run: |
          ${IDF_PATH}/install.sh
      - name: Build Hello World
        run: |
          . ${IDF_PATH}/export.sh
          pip install flit
          flit install -s
          idf-build-apps build -vv -t esp8266 \
            --build-system make \
            -p ${IDF_PATH}/examples/get-started/hello_world \
            --build-dir build_@t \
            --size-file size_info.json
